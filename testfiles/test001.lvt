\documentclass{article} 
\usepackage[T1]{fontenc}
\input{regression-test} 
\usepackage[debug]{jsonparse} 

\begin{document}

\START

\SEPARATOR

\JSONParse{\myJSONdata}{ { "A" : true , "B" : false , "C" : null } }

\SEPARATOR

\JSONParse{\myJSONdataA}{ { "A" : [ { "foo" : "bar" , "a" : 1 } , -1.23 , null ] , "B" : "baz" } }

\ExplSyntaxOn

\TEST { parsing , ~ from ~ string } {
  \str_if_eq:enTF { \JSONParseExpandableValue{\myJSONdataA}{A[0].foo} } { bar } {
    \TRUE
  } {
    \FALSE
  }

  \str_if_eq:enTF { \JSONParseExpandableValue{\myJSONdataA}{A[2]} } { null } {
    \TRUE
  } {
    \FALSE
  }

  \str_if_eq:enTF { \JSONParseExpandableValue{\myJSONdataA}{B} } { baz } {
    \TRUE
  } {
    \FALSE
  }
}

\ExplSyntaxOff

\OMIT
\begin{filecontents}[noheader,force]{test-1.json}
  { "A" : [ { "foo" : "bar" , "a" : 1 } , -1.23 , null ] , "B" : "baz" }
\end{filecontents}
\TIMO

\JSONParseFromFile{\myJSONdataB}{test-1.json}

\ExplSyntaxOn

\TEST { parsing , ~ from ~ file } {
  \str_if_eq:enTF { \JSONParseExpandableValue{\myJSONdataB}{A[0].foo} } { bar } {
    \TRUE
  } {
    \FALSE
  }

  \str_if_eq:enTF { \JSONParseExpandableValue{\myJSONdataB}{A[2]} } { null } {
    \TRUE
  } {
    \FALSE
  }

  \str_if_eq:enTF { \JSONParseExpandableValue{\myJSONdataB}{B} } { baz } {
    \TRUE
  } {
    \FALSE
  }
}

\ExplSyntaxOff

\END

\end{document}
